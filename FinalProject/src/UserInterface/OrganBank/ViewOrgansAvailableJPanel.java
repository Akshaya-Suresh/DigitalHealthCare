/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.OrganBank;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.OrganDonation.OrganDonor;
import Business.OrganDonation.OrganDonorDirectory;
import Business.Organization.OrganBankOrg;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.OrganAvailableRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.stream.Collectors;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author akshayasuresh
 */



public class ViewOrgansAvailableJPanel extends javax.swing.JPanel {


    /**
     * Creates new form ManageOrganCollectionJPanel
     */


    private JPanel userProcessContainer;
    private OrganBankOrg organization;
    private EcoSystem ecosystem;
    private UserAccount userAccount;
    private OrganDonorDirectory odd;
    private Enterprise enterprise;

   public ViewOrgansAvailableJPanel(JPanel userProcessContainer, UserAccount userAccount, OrganBankOrg organization, EcoSystem ecosystem, Enterprise enterprise) {
        initComponents();
     this.userProcessContainer = userProcessContainer;
            this.organization = (OrganBankOrg)organization;
            this.ecosystem = ecosystem;
            this.userAccount = userAccount;
            this.enterprise = enterprise;
            populateOrganViewTable();
   }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        organViewTable = new javax.swing.JTable();
        backBtn = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setLayout(null);

        organViewTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Medical ID", "Organs Available", "Blood Type", "HLA Type", "Reason of Death", "Available Until", "Sender Dr", "Organization", "Sender Dr Contact"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(organViewTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(250, 240, 891, 224);

        backBtn.setBackground(new java.awt.Color(255, 204, 51));
        backBtn.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        backBtn.setText("<< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn);
        backBtn.setBounds(6, 6, 164, 39);

        refreshBtn.setBackground(new java.awt.Color(255, 204, 51));
        refreshBtn.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });
        add(refreshBtn);
        refreshBtn.setBounds(990, 140, 164, 39);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/imageedit_1_7751284971.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        add(jLabel1);
        jLabel1.setBounds(0, 0, 1260, 750);
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        // TODO add your handling code here:
        populateOrganViewTable();
    }//GEN-LAST:event_refreshBtnActionPerformed
    private void populateOrganViewTable() {
        DefaultTableModel model = (DefaultTableModel) organViewTable.getModel();
        model.setRowCount(0);
        
        for (WorkRequest r : organization.getWorkQueue().getWorkRequestList()){
                Object[] row = new Object[9];
                row[0] = r.getMedicalID();
                String organ = ((OrganAvailableRequest) r).getOrgansAvailable().stream().collect(Collectors.joining(","));
                row[1] = organ;
                row[2] = ((OrganAvailableRequest) r).getBloodGrp();
                row[3] = ((OrganAvailableRequest) r).getHlaType();
                row[4] = ((OrganAvailableRequest) r).getDeathReason();
                row[5] = ((OrganAvailableRequest) r).getAvailUntil();
                row[6] = r.getSender().getEmployee().getFirstName();
                row[7] = r.getOrganisation();
                row[8] = r.getSenderNo();
                model.addRow(row);
            } 
            
            
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable organViewTable;
    private javax.swing.JButton refreshBtn;
    // End of variables declaration//GEN-END:variables



    
}
