/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.PatientRole.MedicalRecordsDetails;

import Business.Chlostral.Cholestral;
import Business.Patient.Patient;
import Utilities.Validation;
import java.awt.event.KeyEvent;
import javax.swing.JPanel;

/**
 *
 * @author Niranjanii
 */
public class ChloestralForm extends javax.swing.JPanel {

    /**
     * Creates new form ChloestralForm
     */
    
    private JPanel userProcessContainer;
    private Patient patient;
    private boolean cholesFlag;
    public ChloestralForm(JPanel userProcessContainer,Patient patient,boolean cholesFlag) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.patient=patient;
        this.cholesFlag=cholesFlag;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        hdlTxt = new javax.swing.JTextField();
        ldlTxt = new javax.swing.JTextField();
        triGlyTxt = new javax.swing.JTextField();
        tcTxt = new javax.swing.JTextField();
        clearBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();

        setLayout(null);

        jLabel1.setText(" Total Cholesterol");
        add(jLabel1);
        jLabel1.setBounds(230, 140, 150, 14);

        jLabel2.setText("HDL (High density lipoprotein)");
        add(jLabel2);
        jLabel2.setBounds(230, 190, 142, 14);

        jLabel3.setText("LDL (Low density lipoprotein)");
        add(jLabel3);
        jLabel3.setBounds(230, 230, 138, 14);

        jLabel4.setText("Triglycerides");
        add(jLabel4);
        jLabel4.setBounds(230, 270, 60, 14);

        hdlTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                hdlTxtKeyTyped(evt);
            }
        });
        add(hdlTxt);
        hdlTxt.setBounds(440, 190, 140, 30);

        ldlTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ldlTxtActionPerformed(evt);
            }
        });
        ldlTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ldlTxtKeyTyped(evt);
            }
        });
        add(ldlTxt);
        ldlTxt.setBounds(440, 230, 140, 30);

        triGlyTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                triGlyTxtKeyTyped(evt);
            }
        });
        add(triGlyTxt);
        triGlyTxt.setBounds(440, 270, 140, 30);

        tcTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tcTxtActionPerformed(evt);
            }
        });
        tcTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tcTxtKeyTyped(evt);
            }
        });
        add(tcTxt);
        tcTxt.setBounds(440, 140, 140, 30);

        clearBtn.setText("Clear");
        add(clearBtn);
        clearBtn.setBounds(420, 330, 90, 30);

        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        add(addBtn);
        addBtn.setBounds(290, 330, 90, 30);
    }// </editor-fold>//GEN-END:initComponents

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed

        if(!Validation.nullPointerException(tcTxt) &&  !Validation.nullPointerException(hdlTxt) &&
                !Validation.nullPointerException(ldlTxt) && !Validation.nullPointerException(triGlyTxt))
        {
                Cholestral cholestral = patient.getMedicalRecord().getCholestralDir().addCholestral();
                int tcValue=Integer.parseInt(tcTxt.getText());
               int hdlValue = Integer.parseInt(hdlTxt.getText());
               int ldlValue = Integer.parseInt(ldlTxt.getText());

               if(tcValue < 200)
               {
                   cholestral.setTcRrsult("Desirable");
               }
               else if(tcValue >200 && tcValue < 240)
               {
                   cholestral.setTcRrsult("Borderline high");
               }
               else if( tcValue >239)
               {
                   cholestral.setTcRrsult("High");
               }
               if(hdlValue <40)
               {
                    cholestral.setHdlResult("High");
               }
               else if(hdlValue >40 && hdlValue <60)
               {
                   cholestral.setHdlResult("Optimal");
               }
               else if(hdlValue > 60)
               {
                   cholestral.setHdlResult("Desirable");
               }
               if(ldlValue<100)
               {
                   cholestral.setLdlResult("Optimal");
               }
               else if(ldlValue >100 && ldlValue <160)
               {
                   cholestral.setLdlResult("Borderline High");
               }
               else if(ldlValue>160)
               {
                   cholestral.setLdlResult("High");
               }

               float hdlLdlRatio = hdlValue/ldlValue;
               float tcHdlRatio = tcValue/hdlValue;
               cholestral.setHdlLdlRatio(hdlLdlRatio);
               cholestral.setTcHdlRatio(tcHdlRatio);

               if(tcHdlRatio > 3.5 && tcHdlRatio < 5.0)
               {
                    cholestral.setTcHdlResult("Desirable");
               }
               else if(tcHdlRatio <3.5)
               {
                    cholestral.setTcHdlResult("Ideal");
               }

               if(hdlLdlRatio > 0.3 && hdlLdlRatio <0.4)
               {
                   cholestral.setHdlLdlResult("Desirable");
               }
               else if(hdlLdlRatio > 0.4)
               {
                   cholestral.setHdlLdlResult("Ideal");
               }
        }

       
    }//GEN-LAST:event_addBtnActionPerformed

    private void tcTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tcTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tcTxtActionPerformed

    private void ldlTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ldlTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ldlTxtActionPerformed

    private void tcTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tcTxtKeyTyped
           char vchar = evt.getKeyChar();
       if(! (Character.isAlphabetic(vchar)) || (vchar == KeyEvent.VK_BACK_SPACE) || (vchar == KeyEvent.VK_DELETE))
       {
           evt.consume();
       }
    }//GEN-LAST:event_tcTxtKeyTyped

    private void hdlTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hdlTxtKeyTyped
           char vchar = evt.getKeyChar();
       if(! (Character.isAlphabetic(vchar)) || (vchar == KeyEvent.VK_BACK_SPACE) || (vchar == KeyEvent.VK_DELETE))
       {
           evt.consume();
       }
    }//GEN-LAST:event_hdlTxtKeyTyped

    private void ldlTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ldlTxtKeyTyped
          char vchar = evt.getKeyChar();
       if(! (Character.isAlphabetic(vchar)) || (vchar == KeyEvent.VK_BACK_SPACE) || (vchar == KeyEvent.VK_DELETE))
       {
           evt.consume();
       }
    }//GEN-LAST:event_ldlTxtKeyTyped

    private void triGlyTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_triGlyTxtKeyTyped
           char vchar = evt.getKeyChar();
       if(! (Character.isAlphabetic(vchar)) || (vchar == KeyEvent.VK_BACK_SPACE) || (vchar == KeyEvent.VK_DELETE))
       {
           evt.consume();
       }
    }//GEN-LAST:event_triGlyTxtKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton clearBtn;
    private javax.swing.JTextField hdlTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField ldlTxt;
    private javax.swing.JTextField tcTxt;
    private javax.swing.JTextField triGlyTxt;
    // End of variables declaration//GEN-END:variables
}
