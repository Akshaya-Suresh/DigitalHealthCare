/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DoctorRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Network.Network;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Organization.PatientOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AccountPermissionRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Niranjanii
 */

   
public class GeneralModeJPanel extends javax.swing.JPanel {

    /**
     * Creates new form GeneralModeJPanel
     */
    
    private JPanel userProcessContainer;
    private DoctorOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
     private EcoSystem ecoSystem;
     boolean isMedicalId;
    public GeneralModeJPanel(EcoSystem system,JPanel userProcessContainer, UserAccount account, DoctorOrganization doctorOrganization, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = doctorOrganization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.ecoSystem = system;
         isMedicalId= false;
         requestBtn.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        medicalIdTxt = new javax.swing.JTextField();
        requestBtn = new javax.swing.JButton();
        loginBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 204, 102));
        setLayout(null);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel4.setText("Medical Id :");
        add(jLabel4);
        jLabel4.setBounds(600, 250, 90, 30);

        medicalIdTxt.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                medicalIdTxtInputMethodTextChanged(evt);
            }
        });
        medicalIdTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medicalIdTxtActionPerformed(evt);
            }
        });
        medicalIdTxt.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                medicalIdTxtPropertyChange(evt);
            }
        });
        medicalIdTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                medicalIdTxtKeyTyped(evt);
            }
        });
        add(medicalIdTxt);
        medicalIdTxt.setBounds(710, 250, 160, 30);

        requestBtn.setBackground(new java.awt.Color(255, 204, 51));
        requestBtn.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        requestBtn.setText("Send Request");
        requestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestBtnActionPerformed(evt);
            }
        });
        add(requestBtn);
        requestBtn.setBounds(700, 320, 140, 30);

        loginBtn.setBackground(new java.awt.Color(255, 204, 51));
        loginBtn.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        loginBtn.setText("Go");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });
        add(loginBtn);
        loginBtn.setBounds(900, 260, 110, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/imageedit_1_7751284971.jpg"))); // NOI18N
        add(jLabel1);
        jLabel1.setBounds(0, -100, 1740, 1330);
    }// </editor-fold>//GEN-END:initComponents

    private void medicalIdTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medicalIdTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_medicalIdTxtActionPerformed

    private void requestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestBtnActionPerformed
        // TODO add your handling code here:
        
        String id= medicalIdTxt.getText();
        for(Network network:ecoSystem.getNetworkList())
        {
            for(Enterprise enterprise:network.getEnterpriseDirectory().getEnterpriseList())
            {
                if(enterprise instanceof HospitalEnterprise)
                {
                   for(Organization org :((HospitalEnterprise) enterprise).getOrganizationDirectory().getOrganizationList())
                   {
                       if(org instanceof PatientOrganization)
                       {
                           for(UserAccount userAccount:((PatientOrganization)org).getUserAccountDirectory().getUserAccountList())
                           {
                               if(userAccount.getPatient().getMedicalRecord().getMedicalId() == Integer.parseInt(id))
                               {
                                   
                                     isMedicalId = true;
                                     AccountPermissionRequest request = new AccountPermissionRequest();
                                     request.setMedicalID(Integer.valueOf(id));
                                     request.setMessage("Doctor Access Request");
                                     request.setSender(userAccount);
                                     request.setPermission("Pending");
                                     request.setStatus("Sent");
                                     userAccount.getWorkQueue().getWorkRequestList().add(request);
                                     requestBtn.setText("Sent Request");
                               }
                           }
                       }
               
                   }
                }
            }
        }
        
        if(!isMedicalId)
        {
            JOptionPane.showMessageDialog(null, "Enter valid medical Id");
        }
      
    }//GEN-LAST:event_requestBtnActionPerformed

    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        String id= medicalIdTxt.getText();
        boolean granted = false;
        String permission = null;
        for(Network network:ecoSystem.getNetworkList())
        {
            for(Enterprise enterprise:network.getEnterpriseDirectory().getEnterpriseList())
            {
                if(enterprise instanceof HospitalEnterprise)
                {
                   for(Organization org :((HospitalEnterprise) enterprise).getOrganizationDirectory().getOrganizationList())
                   {
                       if(org instanceof PatientOrganization)
                       {
                           for(UserAccount patientUserAccount:((PatientOrganization)org).getUserAccountDirectory().getUserAccountList())
                           {
                               if(patientUserAccount.getPatient().getMedicalRecord().getMedicalId() == Integer.parseInt(id))
                               {
                                    for(WorkRequest wr :patientUserAccount.getWorkQueue().getWorkRequestList())
                                    {
                                        AccountPermissionRequest apr = (AccountPermissionRequest)wr;
                                            permission = apr.getPermission();
                                        if( apr.getPermission().equalsIgnoreCase("Accepted")){
                                            granted= true;
                                            CheckInOrOutPatient checkInOrOutPatientJPanel = new CheckInOrOutPatient(userProcessContainer,patientUserAccount,enterprise,userAccount,ecoSystem);
                                            userProcessContainer.add("PatientViewJPanel", checkInOrOutPatientJPanel);
                                            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                                            layout.next(userProcessContainer);
                                            
                                            
                                        }
                                       
                                     }
                                 }
                           }
                       }
               
                   }
                }
            }
        }
           if("Pending".equals(permission))
        {
            JOptionPane.showMessageDialog(null, "Please wait to accept the request");
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please send the request");
            requestBtn.setVisible(true);
        }
        if(granted)
        {
           JOptionPane.showMessageDialog(null, "Permission granted");
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Permission not granted");
        }
     


    }//GEN-LAST:event_loginBtnActionPerformed
   
    private void medicalIdTxtInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_medicalIdTxtInputMethodTextChanged
       
    }//GEN-LAST:event_medicalIdTxtInputMethodTextChanged

    private void medicalIdTxtPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_medicalIdTxtPropertyChange
        
    }//GEN-LAST:event_medicalIdTxtPropertyChange

    private void medicalIdTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_medicalIdTxtKeyTyped
        requestBtn.setVisible(false);
    }//GEN-LAST:event_medicalIdTxtKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton loginBtn;
    private javax.swing.JTextField medicalIdTxt;
    private javax.swing.JButton requestBtn;
    // End of variables declaration//GEN-END:variables
}
