/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DoctorRole.OrganDonation;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.OrganDonation.OrganDonor;
import Business.OrganDonation.OrganDonorDirectory;
import Business.Organization.DoctorOrganization;
import Business.Organization.OrganBankOrg;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.OrganAvailableRequest;
import java.awt.CardLayout;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author akshayasuresh
 */
public class OrganRegisterJPanel extends javax.swing.JPanel {

    /**
     * Creates new form OrganDonationJPanel
     */
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private OrganDonorDirectory odd;
    int medicalID;
   public OrganRegisterJPanel(JPanel userProcessContainer, Enterprise enterprise, UserAccount userAccount,int medicalID) {

        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise= enterprise;
        this.userAccount = userAccount;
        odd = new OrganDonorDirectory();
        this.medicalID= medicalID;
        midLabel.setText(String.valueOf(medicalID));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        firstnameLbl6 = new javax.swing.JLabel();
        firstnameLbl7 = new javax.swing.JLabel();
        heartCheckBox = new javax.swing.JCheckBox();
        liverCheckBox = new javax.swing.JCheckBox();
        lungsCheckBox = new javax.swing.JCheckBox();
        pancreasCheckBox = new javax.swing.JCheckBox();
        kidneyCheckBox = new javax.swing.JCheckBox();
        intestineCheckBox = new javax.swing.JCheckBox();
        firstnameLbl8 = new javax.swing.JLabel();
        deathReasonTxt = new javax.swing.JTextField();
        firstnameLbl9 = new javax.swing.JLabel();
        availTxt = new javax.swing.JTextField();
        submitBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        hlaTypeTxt = new javax.swing.JTextField();
        midLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setLayout(null);

        firstnameLbl6.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        firstnameLbl6.setText("HLA Type");
        add(firstnameLbl6);
        firstnameLbl6.setBounds(192, 76, 90, 30);

        firstnameLbl7.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        firstnameLbl7.setText("Healthy Organs");
        add(firstnameLbl7);
        firstnameLbl7.setBounds(192, 160, 159, 30);

        heartCheckBox.setText("Heart");
        add(heartCheckBox);
        heartCheckBox.setBounds(192, 208, 66, 23);

        liverCheckBox.setText("Liver");
        add(liverCheckBox);
        liverCheckBox.setBounds(324, 208, 62, 23);

        lungsCheckBox.setText("Both lungs");
        add(lungsCheckBox);
        lungsCheckBox.setBounds(192, 237, 99, 23);

        pancreasCheckBox.setText("Pancreas");
        add(pancreasCheckBox);
        pancreasCheckBox.setBounds(324, 237, 87, 23);

        kidneyCheckBox.setText("Both Kidneys");
        add(kidneyCheckBox);
        kidneyCheckBox.setBounds(426, 208, 113, 23);

        intestineCheckBox.setText("Intestines");
        add(intestineCheckBox);
        intestineCheckBox.setBounds(429, 237, 106, 23);

        firstnameLbl8.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        firstnameLbl8.setText("Reason of Death");
        add(firstnameLbl8);
        firstnameLbl8.setBounds(192, 278, 135, 30);

        deathReasonTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deathReasonTxtActionPerformed(evt);
            }
        });
        add(deathReasonTxt);
        deathReasonTxt.setBounds(198, 314, 315, 30);

        firstnameLbl9.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        firstnameLbl9.setText("Available until");
        add(firstnameLbl9);
        firstnameLbl9.setBounds(192, 356, 135, 30);

        availTxt.setText("MM-DD-YYYY");
        availTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availTxtActionPerformed(evt);
            }
        });
        add(availTxt);
        availTxt.setBounds(198, 392, 315, 30);

        submitBtn.setBackground(new java.awt.Color(255, 204, 51));
        submitBtn.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        submitBtn.setText("Submit for Donation");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });
        add(submitBtn);
        submitBtn.setBounds(247, 454, 164, 39);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel6.setText("Medical Id ");
        add(jLabel6);
        jLabel6.setBounds(192, 33, 79, 17);

        backBtn.setBackground(new java.awt.Color(255, 204, 51));
        backBtn.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        backBtn.setText("<< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn);
        backBtn.setBounds(6, 6, 139, 40);

        hlaTypeTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hlaTypeTxtActionPerformed(evt);
            }
        });
        add(hlaTypeTxt);
        hlaTypeTxt.setBounds(198, 112, 323, 30);

        midLabel.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        add(midLabel);
        midLabel.setBounds(320, 30, 177, 20);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/imageedit_1_7751284971.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        add(jLabel1);
        jLabel1.setBounds(0, 0, 710, 520);
    }// </editor-fold>//GEN-END:initComponents

    private void deathReasonTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deathReasonTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deathReasonTxtActionPerformed

    private void availTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_availTxtActionPerformed

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat ft = new SimpleDateFormat("MM-dd-yyyy");
                Date avail = new Date();
                try {
                    avail = ft.parse(availTxt.getText());
                } catch (ParseException ex) {
                    Logger.getLogger(OrganRegisterJPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
        for(OrganDonor od: odd.getOrganDonorList()){
            if(medicalID == od.getMedicalID()){
                od.setDeathReason(deathReasonTxt.getText());
                od.setAvailUntil(avail);
                od.setHlaType(hlaTypeTxt.getText());
                getHealthyOrgans(od);
            
        OrganAvailableRequest request = new OrganAvailableRequest();
        request.setMedicalID(medicalID);
        request.setSender(userAccount);
        request.setOrganisation(enterprise.getName());
        request.setSenderNo(userAccount.getEmployee().getPhoneNumber());
        request.setStatus("Sent");
        request.setBloodGrp(od.getBloodGrp());
        request.setDeathReason(od.getDeathReason());
        request.setAvailUntil(avail);
        request.setHlaType(od.getHlaType());
        request.setOrgansAvailable(od.getOrgans());
        
        Organization org = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof OrganBankOrg){
                org = organization;
                break;
            }
        }
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(request);
            userAccount.getWorkQueue().getWorkRequestList().add(request);
        }
        break;
        }
      }
        JOptionPane.showMessageDialog(null,"Organ for donation submitted successfully");
       
        
    }//GEN-LAST:event_submitBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void hlaTypeTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hlaTypeTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hlaTypeTxtActionPerformed
    private OrganDonor getHealthyOrgans(OrganDonor od) {
                ArrayList<String> healthy = null;
                    if(heartCheckBox.isSelected()){ healthy.add("Heart");  }
                    if(liverCheckBox.isSelected()){healthy.add("Liver");}
                    if(pancreasCheckBox.isSelected()){healthy.add("Pancreas");}
                    if(intestineCheckBox.isSelected()){ healthy.add("Intestine");}
                    if(kidneyCheckBox.isSelected()){ healthy.add("L.Kidney"); healthy.add("R.Kidney");}
                    if(lungsCheckBox.isSelected()){ healthy.add("L.Lung"); healthy.add("R.Lung");}
                    for(String o : od.getOrgans()){
                        if(!healthy.contains(o)){
                            od.getOrgans().remove(o);
                        }
                    }
        return od;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField availTxt;
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField deathReasonTxt;
    private javax.swing.JLabel firstnameLbl6;
    private javax.swing.JLabel firstnameLbl7;
    private javax.swing.JLabel firstnameLbl8;
    private javax.swing.JLabel firstnameLbl9;
    private javax.swing.JCheckBox heartCheckBox;
    private javax.swing.JTextField hlaTypeTxt;
    private javax.swing.JCheckBox intestineCheckBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JCheckBox kidneyCheckBox;
    private javax.swing.JCheckBox liverCheckBox;
    private javax.swing.JCheckBox lungsCheckBox;
    private javax.swing.JLabel midLabel;
    private javax.swing.JCheckBox pancreasCheckBox;
    private javax.swing.JButton submitBtn;
    // End of variables declaration//GEN-END:variables

    
}
