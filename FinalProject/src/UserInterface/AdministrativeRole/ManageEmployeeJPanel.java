/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdministrativeRole;

import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.Organization.PatientOrganization;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Business.Patient.Patient;

/**
 *
 * @author akshayasuresh
 */
public class ManageEmployeeJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageAdminJPanel
     */
     private OrganizationDirectory organizationDir;
    private JPanel userProcessContainer;
    private Enterprise enterprise;
   

   public ManageEmployeeJPanel(JPanel userProcessContainer, OrganizationDirectory organizationDirectory,Enterprise enterprise) {
       initComponents();
       this.userProcessContainer = userProcessContainer;
        this.organizationDir = organizationDirectory;
        this.enterprise = enterprise;
       /* jLabel4.setVisible(false);
        Yes.setVisible(false);
        No.setVisible(false);
        
        jLabel6.setVisible(false);
        jLabel7.setVisible(false);
        jLabel5.setVisible(false);
        medicalIdTxt.setVisible(false);
        addMedicalId.setVisible(false);
        
        populateOrganizationComboBox();*/
        populateOrganizationEmpComboBox();
        
    }

    
    public void populateOrganizationEmpComboBox(){
        organizationEmpJComboBox.removeAllItems();
        
        for (Organization organization : organizationDir.getOrganizationList()){
            organizationEmpJComboBox.addItem(organization);
        }
    }

    public void populateTable(Organization organization){
        DefaultTableModel model = (DefaultTableModel) organizationJTable.getModel();
        for(int i=0;i<organizationJTable.getRowCount();i++)
        {
            model.removeRow(i);
        }
        model.setRowCount(0);
        if(organization !=null)
        {
            if(organization instanceof PatientOrganization)
            {

                for (Patient patient : ((PatientOrganization)organization).getPatientDirec().getPatientList()){
                    Object[] row = new Object[5];
                    row[0] = patient.getMedicalRecord().getMedicalId();
                    row[1] = patient.getFirstName();
                    row[2] = patient.getLastName();
                    row[3] = patient.getAge();
                    row[4] = patient.getPhoneNumber();
                    model.addRow(row);
                }
            }
            else
            {
                for (Employee employee : organization.getEmployeeDirectory().getEmployeeList()){
                    Object[] row = new Object[5];
                    row[0] = employee.getId();
                    row[1] = employee.getFirstName();
                    row[2] = employee.getLastName();
                    row[3] = employee.getAge();
                    row[4] = employee.getPhoneNumber();
                    model.addRow(row);
                }
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        organizationEmpJComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        organizationJTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        addEmployee = new javax.swing.JButton();
        Image = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 204, 102));
        setForeground(new java.awt.Color(255, 204, 102));
        setLayout(null);

        organizationEmpJComboBox.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        organizationEmpJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        organizationEmpJComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                organizationEmpJComboBoxItemStateChanged(evt);
            }
        });
        organizationEmpJComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                organizationEmpJComboBoxMouseClicked(evt);
            }
        });
        organizationEmpJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationEmpJComboBoxActionPerformed(evt);
            }
        });
        organizationEmpJComboBox.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                organizationEmpJComboBoxPropertyChange(evt);
            }
        });
        add(organizationEmpJComboBox);
        organizationEmpJComboBox.setBounds(310, 70, 150, 30);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel3.setText("Organization");
        add(jLabel3);
        jLabel3.setBounds(190, 70, 110, 30);

        organizationJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(organizationJTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(130, 110, 480, 92);

        backJButton.setBackground(new java.awt.Color(255, 204, 0));
        backJButton.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton);
        backJButton.setBounds(40, 50, 110, 30);

        addEmployee.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        addEmployee.setText("Add Employee");
        addEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEmployeeActionPerformed(evt);
            }
        });
        add(addEmployee);
        addEmployee.setBounds(480, 230, 150, 30);

        Image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/imageedit_1_7751284971.jpg"))); // NOI18N
        Image.setText("jLabel4");
        add(Image);
        Image.setBounds(0, 0, 1240, 540);
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void organizationEmpJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationEmpJComboBoxActionPerformed
    
    }//GEN-LAST:event_organizationEmpJComboBoxActionPerformed

    private void organizationEmpJComboBoxPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_organizationEmpJComboBoxPropertyChange
       
    }//GEN-LAST:event_organizationEmpJComboBoxPropertyChange

    private void organizationEmpJComboBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_organizationEmpJComboBoxMouseClicked
      
    }//GEN-LAST:event_organizationEmpJComboBoxMouseClicked

    private void organizationEmpJComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_organizationEmpJComboBoxItemStateChanged
       Organization org = (Organization)organizationEmpJComboBox.getSelectedItem();
       if(org instanceof PatientOrganization)
       {
           addEmployee.setText("Add Patient");
       }
       else
       {
           addEmployee.setText("Add Employee");
       }
        populateTable((Organization)organizationEmpJComboBox.getSelectedItem());
//       if(org instanceof PatientOrganization)
//       {
//           jLabel4.setVisible(true);
//           Yes.setVisible(true);
//           No.setVisible(true);
//           jLabel6.setVisible(true);
//           jLabel7.setVisible(true);
//       }
//       else
//       {
//           jLabel4.setVisible(false);
//           Yes.setVisible(false);
//           No.setVisible(false);
//           jLabel6.setVisible(false);
//           jLabel7.setVisible(false);  
//       }
    }//GEN-LAST:event_organizationEmpJComboBoxItemStateChanged

    private void addEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEmployeeActionPerformed
         AddEmployeeJPanel addEmployeeJPanel = new AddEmployeeJPanel(userProcessContainer, (Organization)organizationEmpJComboBox.getSelectedItem(),enterprise);
        userProcessContainer.add("AddEmployeeJPanel", addEmployeeJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_addEmployeeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Image;
    private javax.swing.JButton addEmployee;
    private javax.swing.JButton backJButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox organizationEmpJComboBox;
    private javax.swing.JTable organizationJTable;
    // End of variables declaration//GEN-END:variables
}
